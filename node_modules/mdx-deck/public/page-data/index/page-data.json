{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","result":{"data":{"deck":{"id":"4d400914-9fa4-51f0-b8f9-ccff0e469ae9","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = myTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Center, {\n    mdxType: \"Center\"\n  }, mdx(Box, {\n    mdxType: \"Box\"\n  }, mdx(Heading, {\n    css: \"text-align: center;\",\n    mdxType: \"Heading\"\n  }, \"Theme-UI\"), mdx(Flex, {\n    my: 4,\n    mx: \"auto\",\n    mdxType: \"Flex\"\n  }, mdx(Spinner, {\n    mx: \"auto\",\n    mdxType: \"Spinner\"\n  })), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"p\", null, \"AKA what I have been waiting for...\")))), mdx(\"hr\", null), mdx(Invert, {\n    mdxType: \"Invert\"\n  }, mdx(\"h1\", null, \"About Me\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-taught  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JAMstack Developer  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bootcamp Mentor  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JAMstack Phoenix Host\"))), mdx(\"hr\", null), mdx(Center, {\n    mdxType: \"Center\"\n  }, mdx(Header, {\n    mdxType: \"Header\"\n  }, \"What is Theme-UI?\")), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"What Theme-UI isn't\"), mdx(Center, {\n    css: \"height: 100px\",\n    mdxType: \"Center\"\n  }, \"Theme-UI Is not a CSS in JS Library\", mdx(\"p\", null, \"\\uD83D\\uDC69\\u200D\\uD83C\\uDFA4\\uD83D\\uDC84\\uD83D\\uDC85\")), mdx(Center, {\n    css: \"height: 100px\",\n    mdxType: \"Center\"\n  }, \"In fact its built on top of Emotion!\", mdx(\"p\", null, \"\\uD83D\\uDC69\\u200D\\uD83C\\uDFA4\")), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"What Theme-UI is\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theme-UI is complete library built around creating themeable components. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It provides you a system for creating themes, and components that can be driven by them.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It calls itself a mini-framework\")), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"What do themes look like?\"), mdx(\"p\", null, \"Simple Javascript Objects.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export default {\\n  colors: {\\n    text: '#000',\\n    background: '#fff',\\n    primary: '#33e',\\n  },\\n  ...\\n}\\n\")), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Where does the power come from?\"), mdx(\"p\", null, \"React Context +\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Using Tokens & SX Prop\"), mdx(\"p\", null, \"Theme-UI uses the new context API to automagically feed your theme to your components, and third party components built with theme ui.\"), mdx(\"hr\", null), mdx(FullScreenCode, {\n    mdxType: \"FullScreenCode\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export const theme = {\\n    colors: {\\n        primary: 'blue',\\n        secondary: 'red',\\n    }\\n}\\n\\nexport const Component = () => (\\n<div \\nsx={{   width: \\\"100px\\\", \\n        height: \\\"100px\\\", \\n        backgroundColor: \\\"primary\\\"\\n    }} \\n/>)\\n\\n\\n// layout.js\\nimport { ThemeProvider } from 'theme-ui'\\nimport theme from './theme'\\nexport default props => (\\n  <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\\n)\\n\"))), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Theme Components\"), mdx(\"p\", null, \"Theme UI has an optional Package of Components. \"), mdx(\"p\", null, \"It includes stuff like Inputs, Buttons, Loading Spinners, and much more!\"), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Styling Theme Components\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Styling these components is very easy!   \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"They are styled right on the theme object.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"These components can be used to build bigger, more complicated themeable components. \")), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Components can define variants\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Button>Click</Button>\\n<Button variant=\\\"secondary\\\">Click</Button>\\n\")), mdx(Button, {\n    mdxType: \"Button\"\n  }, \"Click\"), mdx(Button, {\n    variant: \"secondary\",\n    mdxType: \"Button\"\n  }, \"Click\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Defining Variants\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export default {\\n  buttons: {\\n    primary: {\\n      backgroundColor: \\\"primary\\\",\\n      padding: 4,\\n      margin: 4\\n    },\\n    secondary: {\\n      backgroundColor: \\\"secondary\\\",\\n      padding: 2,\\n      margin: 2\\n    }\\n  }\\n  ...\\n}\\n\")), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Creating Components\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const Header = ({ children }) => (\\n  <Flex\\n    sx={{\\n      alignItems: \\\"center\\\",\\n      justifyContent: \\\"center\\\",\\n      padding: 4,\\n      margin: 4,\\n      color: \\\"secondary\\\",\\n      border: theme => `1px solid ${theme.colors.primary}`\\n    }}\\n  >\\n    {children}\\n  </Flex>\\n);\\n\")), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Break Points!\"), mdx(\"p\", null, \"You can define responsive styles just by using arrays!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"{\\n    fontSize: ['10px', '20px', '30px']\\n    color: ['green', 'red', 'blue']\\n}\\n\")), mdx(\"p\", null, \"You can also define your own breakpoints!\"), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Even styles MDX!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"  styles: {\\n    h1: {\\n      fontSize: 32,\\n      fontFamily: 'heading',\\n      fontWeight: 'heading',\\n      color: 'primary',\\n      mt: 4,\\n      mb: 2,\\n    },\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Thanks to our sponsors!\"), mdx(Center, {\n    css: \"height: 400px\",\n    mdxType: \"Center\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Netlify\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gatsby\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Co+Hoots\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Postmark\"))), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Postmark\"), mdx(Box, {\n    css: \"font-size: 30px;\",\n    mdxType: \"Box\"\n  }, \"Postmark has generously sponsored our Taco Tuesday and they are also providing all JAMstack Phoenix members with 3-months of free and unlimited sending! With lighting fast delivery, affordable monthly pricing, and 45-days of email history for quick and easy troubleshooting, they are a great email provider for all of your web projects.\"), mdx(\"p\", null, \"Check out the offer! \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://postmarkapp.com/jamstackphoenix\"\n  }), \"https://postmarkapp.com/jamstackphoenix\")), mdx(\"hr\", null), mdx(Header, {\n    mdxType: \"Header\"\n  }, \"Gatsby\"), mdx(\"p\", null, \"Gatsby as always sponsored the food for this event.  \"), mdx(\"p\", null, \"Use discount code PHOENIX2019 in their swag store for 20% off!\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"4d400914-9fa4-51f0-b8f9-ccff0e469ae9","slug":"","title":"About Me"}}}